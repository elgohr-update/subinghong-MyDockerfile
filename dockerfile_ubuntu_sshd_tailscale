FROM       ubuntu:20.04
#MAINTAINER sbh

ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 LANGUAGE=en_US.UTF-8 \
    TAILSCALE_KEY=${TAILSCALE_KEY} \
    TAILSCALE_HOSTNAME=${TAILSCALE_HOSTNAME} \
    GOST_VER=2.11.1 GOST_METHOD=chacha20 GOST_PASSWORD=ss123456 GOST_PORT=8081

RUN apt-get update \
&& apt-get install -y openssh-server vim zip unzip git inetutils-ping curl ncat \
&& mkdir /var/run/sshd \

&& echo 'root:rootpw' |chpasswd \
# && useradd -m alpine  && echo "alpine:alpine" | /usr/sbin/chpasswd  && adduser alpine sudo \
&& sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \
&& echo "PermitRootLogin yes" >> /etc/ssh/sshd_config \
&& echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config \
&& mkdir /root/.ssh \

# install tailscale
&& apt-get install -y gnupg gnupg2 gnupg1 \
&& curl https://pkgs.tailscale.com/stable/ubuntu/bionic.gpg | apt-key add - \
&& curl https://pkgs.tailscale.com/stable/ubuntu/bionic.list | tee /etc/apt/sources.list.d/tailscale.list \
&& apt-get install -y tailscale \
&& touch /start.sh && chmod +x /start.sh \

#install nginx
&& apt-get install -y nginx \
#install gost proxy
&& curl -sL https://github.com/xiaokaixuan/gost-heroku/releases/download/v${GOST_VER}/gost_${GOST_VER}_linux_amd64.tar.gz | tar --no-same-owner -zx \
    && mv gost_${GOST_VER}_linux_amd64 gost && chmod a+x gost/gost \
#install code-server
&& curl -fOL https://github.com/coder/code-server/releases/download/v4.9.1/code-server-4.9.1-linux-amd64.tar.gz \
&& tar --no-same-owner -xzvf code-server-4.9.1-linux-amd64.tar.gz \
&& rm code-server-4.9.1-linux-amd64.tar.gz \
#clear cache
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN << "EOF" cat > /start.sh 
#!/bin/bash
sh -c 'echo root:${ROOT_PASSWORD:-rootpw} | chpasswd'
nginx
nohup /gost/gost -L=ss+mws://$GOST_METHOD:$GOST_PASSWORD@:$GOST_PORT & > nohup_gost.out
if [ -d code-server-4.4.0-linux-amd64 ]; then
  cd code-server-4.4.0-linux-amd64
  mkdir -p /mydata/vsc_user_data
  if [ $VSC_ENABLE ]; then
    export PASSWORD=${VSC_PASSWORD:-vscpw} && nohup ./bin/code-server --config vsc_config.yaml --bind-addr 0.0.0.0:8443 --auth password --user-data-dir /mydata/vsc_user_data & > nohup_code-server.out & echo  > code-server.pid
  fi
fi
if [ $TAILSCALE_KEY ]; then
    SET_TAILSCALE_KEY='--auth-key=${TAILSCALE_KEY}'
if
if [ $TAILSCALE_HOSTNAME ]; then
    SET_TAILSCALE_HOSTNAME='--hostname=${TAILSCALE_HOSTNAME}'
if
nohup tailscaled --tun=userspace-networking --socks5-server=localhost:1055 --socket=/var/run/tailscale/tailscaled.sock --port 41641 > nohup_tailscale.out &
tailscale up ${SET_TAILSCALE_KEY} ${SET_TAILSCALE_HOSTNAME}
/usr/sbin/sshd -D
if [ -f /mydata/start_ext.sh ]; then . /mydata/start_ext.sh ; fi
EOF

#nginx http server config 
RUN << 'EOF' cat > /etc/nginx/conf.d/default.conf

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /gost/ {
        proxy_pass http://127.0.0.1:8081/;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /vsc/ {
        set $target http://127.0.0.1:8443/;
        proxy_pass $target;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
EOF

EXPOSE 80

ENTRYPOINT [ "/start.sh" ]
